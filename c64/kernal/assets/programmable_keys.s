// #LAYOUT# STD *        #TAKE
// #LAYOUT# *   KERNAL_0 #TAKE
// #LAYOUT# *   *        #IGNORE

//
// Command string definitions for programmable keys
//


#if CONFIG_PROGRAMMABLE_KEYS


.macro PROGRAMMABLE_KEY_CODE(STR, CODE)
{
	.if (STR.size() > 0)
	{
		.byte CODE
	}
}

.macro PROGRAMMABLE_KEY_STRING(STR)
{
	.if (STR.size() > 0)
	{
		.text STR
		.byte $00
	}
}

.macro PROGRAMMABLE_KEY_OFFSET(STR, LABEL)
{
	.if (STR.size() > 0)
	{
		.byte LABEL - programmable_keys_strings
	}
}


programmable_keys_codes:

	PROGRAMMABLE_KEY_CODE(CONFIG_KEYCMD_RUN,  KEY_RUN)

	PROGRAMMABLE_KEY_CODE(CONFIG_KEYCMD_F1,   KEY_F1)
	PROGRAMMABLE_KEY_CODE(CONFIG_KEYCMD_F2,   KEY_F2)
	PROGRAMMABLE_KEY_CODE(CONFIG_KEYCMD_F3,   KEY_F3)
	PROGRAMMABLE_KEY_CODE(CONFIG_KEYCMD_F4,   KEY_F4)
	PROGRAMMABLE_KEY_CODE(CONFIG_KEYCMD_F5,   KEY_F5)
	PROGRAMMABLE_KEY_CODE(CONFIG_KEYCMD_F6,   KEY_F6)
	PROGRAMMABLE_KEY_CODE(CONFIG_KEYCMD_F7,   KEY_F7)
	PROGRAMMABLE_KEY_CODE(CONFIG_KEYCMD_F8,   KEY_F8)

#if !CONFIG_LEGACY_SCNKEY && (CONFIG_KEYBOARD_C128 || CONFIG_KEYBOARD_C65)
	PROGRAMMABLE_KEY_CODE(CONFIG_KEYCMD_HELP,  KEY_HELP)
#endif

#if !CONFIG_LEGACY_SCNKEY && CONFIG_KEYBOARD_C65
	PROGRAMMABLE_KEY_CODE(CONFIG_KEYCMD_F9,   KEY_F9)
	PROGRAMMABLE_KEY_CODE(CONFIG_KEYCMD_F10,  KEY_F10)
	PROGRAMMABLE_KEY_CODE(CONFIG_KEYCMD_F11,  KEY_F11)
	PROGRAMMABLE_KEY_CODE(CONFIG_KEYCMD_F12,  KEY_F12)
	PROGRAMMABLE_KEY_CODE(CONFIG_KEYCMD_F13,  KEY_F13)
	PROGRAMMABLE_KEY_CODE(CONFIG_KEYCMD_F14,  KEY_F14)
#endif

__programmable_keys_codes_end:


programmable_keys_strings:

__str_offset_RUN:     PROGRAMMABLE_KEY_STRING(CONFIG_KEYCMD_RUN)

__str_offset_F1:      PROGRAMMABLE_KEY_STRING(CONFIG_KEYCMD_F1)
__str_offset_F2:      PROGRAMMABLE_KEY_STRING(CONFIG_KEYCMD_F2)
__str_offset_F3:      PROGRAMMABLE_KEY_STRING(CONFIG_KEYCMD_F3)
__str_offset_F4:      PROGRAMMABLE_KEY_STRING(CONFIG_KEYCMD_F4)
__str_offset_F5:      PROGRAMMABLE_KEY_STRING(CONFIG_KEYCMD_F5)
__str_offset_F6:      PROGRAMMABLE_KEY_STRING(CONFIG_KEYCMD_F6)
__str_offset_F7:      PROGRAMMABLE_KEY_STRING(CONFIG_KEYCMD_F7)
__str_offset_F8:      PROGRAMMABLE_KEY_STRING(CONFIG_KEYCMD_F8)

#if !CONFIG_LEGACY_SCNKEY && (CONFIG_KEYBOARD_C128 || CONFIG_KEYBOARD_C65)
__str_offset_HELP:    PROGRAMMABLE_KEY_STRING(CONFIG_KEYCMD_HELP)
#endif

#if !CONFIG_LEGACY_SCNKEY && CONFIG_KEYBOARD_C65
__str_offset_F9:      PROGRAMMABLE_KEY_STRING(CONFIG_KEYCMD_F9)
__str_offset_F10:     PROGRAMMABLE_KEY_STRING(CONFIG_KEYCMD_F10)
__str_offset_F11:     PROGRAMMABLE_KEY_STRING(CONFIG_KEYCMD_F11)
__str_offset_F12:     PROGRAMMABLE_KEY_STRING(CONFIG_KEYCMD_F12)
__str_offset_F13:     PROGRAMMABLE_KEY_STRING(CONFIG_KEYCMD_F13)
__str_offset_F14:     PROGRAMMABLE_KEY_STRING(CONFIG_KEYCMD_F14)
#endif

__programmable_keys_strings_end:
{
	.var offset = __programmable_keys_strings_end - programmable_keys_strings
	.if (offset >= 255) .error "Programmable keys took too much space"
}


programmable_keys_offsets:

	PROGRAMMABLE_KEY_OFFSET(CONFIG_KEYCMD_RUN,  __str_offset_RUN)

	PROGRAMMABLE_KEY_OFFSET(CONFIG_KEYCMD_F1,   __str_offset_F1)
	PROGRAMMABLE_KEY_OFFSET(CONFIG_KEYCMD_F2,   __str_offset_F2)
	PROGRAMMABLE_KEY_OFFSET(CONFIG_KEYCMD_F3,   __str_offset_F3)
	PROGRAMMABLE_KEY_OFFSET(CONFIG_KEYCMD_F4,   __str_offset_F4)
	PROGRAMMABLE_KEY_OFFSET(CONFIG_KEYCMD_F5,   __str_offset_F5)
	PROGRAMMABLE_KEY_OFFSET(CONFIG_KEYCMD_F6,   __str_offset_F6)
	PROGRAMMABLE_KEY_OFFSET(CONFIG_KEYCMD_F7,   __str_offset_F7)
	PROGRAMMABLE_KEY_OFFSET(CONFIG_KEYCMD_F8,   __str_offset_F8)

#if !CONFIG_LEGACY_SCNKEY && (CONFIG_KEYBOARD_C128 || CONFIG_KEYBOARD_C65)
	PROGRAMMABLE_KEY_OFFSET(CONFIG_KEYCMD_HELP,  __str_offset_HELP)
#endif

#if !CONFIG_LEGACY_SCNKEY && CONFIG_KEYBOARD_C65
	PROGRAMMABLE_KEY_OFFSET(CONFIG_KEYCMD_F9,   __str_offset_F9)
	PROGRAMMABLE_KEY_OFFSET(CONFIG_KEYCMD_F10,  __str_offset_F10)
	PROGRAMMABLE_KEY_OFFSET(CONFIG_KEYCMD_F11,  __str_offset_F11)
	PROGRAMMABLE_KEY_OFFSET(CONFIG_KEYCMD_F12,  __str_offset_F12)
	PROGRAMMABLE_KEY_OFFSET(CONFIG_KEYCMD_F13,  __str_offset_F13)
	PROGRAMMABLE_KEY_OFFSET(CONFIG_KEYCMD_F14,  __str_offset_F14)
#endif


#endif // CONFIG_PROGRAMMABLE_KEYS
